/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package Menus;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tomas
 */
public class MenuLinhas extends javax.swing.JFrame {

    private final Connection con;

    /**
     * Creates new form Login_Application
     * @param con
     */
    public MenuLinhas(Connection con) {
        initComponents();
        this.con = con;
        
        CorLinha.removeAllItems();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM TipoBilhetes");

            while (rs.next()) {
                String linha = rs.getString("Linha");
                String preco = rs.getString("Preco");
                
                CorLinha.addItem(linha);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuBilhetes.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (rs != null) rs.close();
                if (st != null) st.close();
            } catch (SQLException ex) {
                Logger.getLogger(MenuBilhetes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        CorLinha.setSelectedItem(null); 
        Sentido.removeAllItems();
        Sentido.setSelectedItem(null);
        TipoDia.removeAllItems();
        TipoDia.setSelectedItem(null);
        BotaoConfirmarLinhas.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel Fundo = new javax.swing.JPanel();
        java.awt.Panel Topo = new java.awt.Panel();
        javax.swing.JLabel TUB_logo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TipoDia = new javax.swing.JComboBox<>();
        CorLinha = new javax.swing.JComboBox<>();
        Sentido = new javax.swing.JComboBox<>();
        javax.swing.JLabel TextoSentido = new javax.swing.JLabel();
        javax.swing.JLabel TextoTipoDia = new javax.swing.JLabel();
        javax.swing.JLabel TextoCorLinha = new javax.swing.JLabel();
        BotaoConfirmarLinhas = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaHorario = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 71, 103));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(440, 920));

        Fundo.setBackground(new java.awt.Color(0, 71, 103));
        Fundo.setForeground(new java.awt.Color(0, 71, 103));

        Topo.setBackground(new java.awt.Color(3, 125, 190));
        Topo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        TUB_logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TUB_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/TUB.png"))); // NOI18N
        TUB_logo.setFocusable(false);
        TUB_logo.setMaximumSize(new java.awt.Dimension(440, 50));
        TUB_logo.setMinimumSize(new java.awt.Dimension(440, 50));
        TUB_logo.setPreferredSize(new java.awt.Dimension(440, 50));
        TUB_logo.setRequestFocusEnabled(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/seta-esquerda.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.setMaximumSize(new java.awt.Dimension(70, 70));
        jLabel1.setMinimumSize(new java.awt.Dimension(70, 70));
        jLabel1.setPreferredSize(new java.awt.Dimension(70, 70));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/notificacao.png"))); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/do-utilizador.png"))); // NOI18N

        javax.swing.GroupLayout TopoLayout = new javax.swing.GroupLayout(Topo);
        Topo.setLayout(TopoLayout);
        TopoLayout.setHorizontalGroup(
            TopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopoLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 274, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(TopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(TUB_logo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
        );
        TopoLayout.setVerticalGroup(
            TopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopoLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(TopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(TopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(TUB_logo, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
        );

        TipoDia.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        TipoDia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        CorLinha.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        CorLinha.setToolTipText("");
        CorLinha.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        CorLinha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CorLinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorLinhaActionPerformed(evt);
            }
        });

        Sentido.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        Sentido.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        TextoSentido.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        TextoSentido.setForeground(new java.awt.Color(255, 255, 255));
        TextoSentido.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TextoSentido.setText("Sentido");

        TextoTipoDia.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        TextoTipoDia.setForeground(new java.awt.Color(255, 255, 255));
        TextoTipoDia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TextoTipoDia.setText("Tipo de dia");

        TextoCorLinha.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        TextoCorLinha.setForeground(new java.awt.Color(255, 255, 255));
        TextoCorLinha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TextoCorLinha.setText("Cor da Linha");

        BotaoConfirmarLinhas.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        BotaoConfirmarLinhas.setText("Procurar Horarios");
        BotaoConfirmarLinhas.setToolTipText("");
        BotaoConfirmarLinhas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotaoConfirmarLinhas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotaoConfirmarLinhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoConfirmarLinhasActionPerformed(evt);
            }
        });

        TabelaHorario.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        TabelaHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Horario", "Paragem"
            }
        ));
        TabelaHorario.setToolTipText("");
        jScrollPane2.setViewportView(TabelaHorario);

        javax.swing.GroupLayout FundoLayout = new javax.swing.GroupLayout(Fundo);
        Fundo.setLayout(FundoLayout);
        FundoLayout.setHorizontalGroup(
            FundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Topo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FundoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(FundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CorLinha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sentido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TipoDia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
            .addGroup(FundoLayout.createSequentialGroup()
                .addGroup(FundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FundoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(FundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextoCorLinha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TextoSentido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TextoTipoDia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(FundoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(FundoLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(BotaoConfirmarLinhas, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FundoLayout.setVerticalGroup(
            FundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FundoLayout.createSequentialGroup()
                .addComponent(Topo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(TextoCorLinha, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CorLinha, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TextoSentido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Sentido, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TextoTipoDia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TipoDia, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(BotaoConfirmarLinhas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CorLinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorLinhaActionPerformed
        Statement stHorarios;
        Statement stBilhetes;
        ResultSet horarios;
        ResultSet bilhetes;
        Set<String> direcoesAdicionadas = new HashSet<>();

        try {
            stHorarios = con.createStatement();
            horarios = stHorarios.executeQuery("SELECT * FROM Horarios");
            stBilhetes = con.createStatement();
            bilhetes = stBilhetes.executeQuery("SELECT * FROM TipoBilhetes");

            while (bilhetes.next()) {
                String linhaBilhetes = bilhetes.getString("Linha");
                Object selectedItem = CorLinha.getSelectedItem();
                if (selectedItem != null && selectedItem.equals(linhaBilhetes)) {
                    Sentido.removeAllItems();
                    while (horarios.next()) {
                        String linhaHorarios = horarios.getString("Linha");
                        String direcao = horarios.getString("Direcao");

                        if (linhaHorarios.equals(linhaBilhetes)) {
                            if (!direcoesAdicionadas.contains(direcao)) {
                                Sentido.addItem(direcao);
                                direcoesAdicionadas.add(direcao);
                            }
                        }
                    }
                }   
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuBilhetes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        TipoDia.removeAllItems();
        TipoDia.addItem("Dias Uteis e Sabados");
        TipoDia.addItem("Domingos e Feriados");
        BotaoConfirmarLinhas.setEnabled(true);
    }//GEN-LAST:event_CorLinhaActionPerformed

    private void BotaoConfirmarLinhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoConfirmarLinhasActionPerformed
        String CorLinhaString = (String)  CorLinha.getSelectedItem();
        String SentidoString = (String)  Sentido.getSelectedItem(); 
        DefaultTableModel model = (DefaultTableModel) TabelaHorario.getModel();
        model.setRowCount(0);
        DefaultTableModel tblModel = (DefaultTableModel)TabelaHorario.getModel();
        
        Statement st;
        ResultSet rs;

        try {
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM Horarios");

            while (rs.next()) {
                String linha = rs.getString("Linha");
                String direcao = rs.getString("Direcao");
                String horario = rs.getString("Horario");
                String estacao = rs.getString("Estacao");
                
                if(CorLinhaString.equals(linha) && SentidoString.equals(direcao)){
                    String tbData[] = {horario, estacao};
                    tblModel.addRow(tbData);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuBilhetes.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_BotaoConfirmarLinhasActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        dispose();
        MenuBRT Voltar = new MenuBRT();
        Voltar.setVisible(true);
    }//GEN-LAST:event_jLabel1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoConfirmarLinhas;
    private javax.swing.JComboBox<String> CorLinha;
    private javax.swing.JComboBox<String> Sentido;
    private javax.swing.JTable TabelaHorario;
    private javax.swing.JComboBox<String> TipoDia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
